on: push

env:
  build_dir: cmake-build-linux-integration-tests
  binary_dir: cmake-build-linux-integration-tests/bin
  cache_artifacts_dir: artifacts
jobs:
  build_integration_tests:
    runs-on: ubuntu-latest
    container:
      image: bicompb/gcc:11-root
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Configure CMake"
        uses: ./.github/workflows/action-cmake-configure
        with:
          preset: linux_gcc_debug_integration_tests
          build_type: Debug

      - name: "Build integration tests"
        working-directory: ${{ env.build_dir }}
        run: |
          make -j$(nproc) home_assistant_itc1

      - name: "Cache artifacts"
        uses: actions/upload-artifact@v3
        with:
          name: integration_test_binaries
          path: ${{ env.binary_dir }}

#  run_tests:
#    env:
#      cache_artifacts_dir: artifacts
#    runs-on: ubuntu-latest
#    needs: build_integration_tests
#    steps:
#      - name: "Checkout"
#        uses: actions/checkout@v3
#
#      - name: "Download artifacts"
#        uses: actions/download-artifact@v3
#        with:
#          name: integration_test_binaries
#          path: ${{ env.cache_artifacts_dir }}
#
#      - name: "HomeAssistant_ITC1"
#        uses: ./.github/workflows/action-integration-test-run
#        with:
#          dockerfile: ./test/integration_tests/home_assistant_itc1/Dockerfile
#          target: home_assistant_itc1
#
#  prepare_services:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Check out repository code
#        uses: actions/checkout@v3
#
#      - name: "Build docker image"
#        run: docker build -f ./test/integration_tests/home_assistant_itc1/Dockerfile -t eclipse-mosquitto:itest .
#        shell: bash
#
#      - id: "image-cache"
#        name: "Cache image"
#        uses: actions/cache@v3
#        with:
#          path: ~/image-cache
#          key: image-cache-${{ runner.os }}
#
#      - if: steps.image-cache.outputs.cache-hit != 'true'
#        run: |
#          docker save -o ~/image-cache/postgres.tar eclipse-mosquitto:itest


#  test:
#    needs: prepare_services
#    runs-on: ubuntu-latest
#    container:
#      image: bicompb/gcc:11-root
#    env:
#      build_dir: cmake-build-linux-integration-tests
#      binary_dir: cmake-build-linux-integration-tests/bin
#    services:
#      mqtt_broker:
#        image: eclipse-mosquitto:itest
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5

#    steps:
#      - name: Check out repository code
#        uses: actions/checkout@v3
#
#      - id: "image-cache"
#        name: "Cache load image"
#        uses: actions/cache@v3
#        with:
#          path: ~/image-cache
#          key: image-cache-${{ runner.os }}
#
#      - name: "Configure CMake"
#        uses: ./.github/workflows/action-cmake-configure
#        with:
#          preset: linux_gcc_debug_integration_tests
#          build_type: Debug
#
#      - name: "Build integration tests"
#        working-directory: ${{ env.build_dir }}
#        run: |
#          make -j$(nproc) home_assistant_itc1
#
#      - name: "Try connect"
#        run: ${{ env.binary_dir }}/home_assistant_itc1 --tp_mqtt_server_address mqtt_broker --tp_mqtt_server_port 1883
#        shell: bash

#  test_docker_compose:
#    needs: build_integration_tests
#    runs-on: ubuntu-latest
#    steps:
#      - name: Check out repository code
#        uses: actions/checkout@v3
#
#      - name: "Download artifacts"
#        uses: actions/download-artifact@v3
#        with:
#          name: integration_test_binaries
#          path: ${{ env.cache_artifacts_dir }}
#
#      - name: "asd"
#        run: ARTIFACTS_DIR=`pwd`/${{ env.cache_artifacts_dir }} docker-compose -f test/integration_tests/home_assistant_itc1/docker-compose.yml  up --abort-on-container-exit
#        shell: bash



  test_docker_compose_via_action:
    needs: build_integration_tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: "Download artifacts"
        uses: actions/download-artifact@v3
        with:
          name: integration_test_binaries
          path: ${{ env.cache_artifacts_dir }}

      - name: "home_assistant_itc1"
        uses: ./.github/workflows/action-test-docker-compose
        with:
          docker_compose_path: test/integration_tests/home_assistant_itc1/docker-compose.yml
          target: home_assistant_itc1















